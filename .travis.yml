dist: bionic

sudo: required

group: travis_lts

language: generic

env:
  global:
    - TIMEOUT=30

cache:
  apt: true

git:
  clone: false

matrix:
  fast_finish: true
  include:
    - os: linux
      env:
        - BUILD_NAME=BIONIC_CATKIN_FULL_RELEASE
        - DOCKER_FILE="ubuntu-bionic"
        - REQUIRED_ONLY=--required-only
        - BUILD_TYPE=Release
        - CATKIN_CONFIG_OPTIONS="-DCMAKE_BUILD_TYPE=Release -DTREAT_WARNINGS_AS_ERRORS=ON"
        - USE_CATKIN=ON
      services: docker

before_install:
  - git clone --depth=50 git@github.com:personalrobotics/libada.git personalrobotics/libada
    if [ -n "$DOCKER_FILE" ]; then
      docker build -t "$DOCKER_FILE" -f ".ci/docker/$DOCKER_FILE" .;
      docker run -itd -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR -v ~/.ssh/id_rsa:/root/.ssh/id_rsa:ro -v ~/.ssh/known_hosts:/root/.ssh/known_hosts --env-file .ci/docker/env.list --name libada-docker "$DOCKER_FILE";
      docker exec libada-docker /bin/sh -c "cd $TRAVIS_BUILD_DIR && ./.ci/before_install.sh";
    else
      '.ci/before_install.sh';
    fi

install:
  - if [ -n "$DOCKER_FILE" ]; then
      docker exec libada-docker /bin/sh -c "cd $TRAVIS_BUILD_DIR && ./.ci/install.sh";
    else
      '.ci/install.sh';
    fi

script:
  - if [ -n "$DOCKER_FILE" ]; then
      docker exec libada-docker /bin/sh -c "cd $TRAVIS_BUILD_DIR && ./.ci/script.sh";
    else
      '.ci/script.sh';
    fi

after_script:
  - if [ -n "$DOCKER_FILE" ]; then
      docker exec libada-docker /bin/sh -c "cd $TRAVIS_BUILD_DIR && ./.ci/after_script.sh";
    else
      '.ci/after_script.sh';
    fi

after_failure:
  - if [ -n "$DOCKER_FILE" ]; then
      docker exec libada-docker /bin/sh -c "cd $TRAVIS_BUILD_DIR && ./.ci/after_failure.sh";
    else
      '.ci/after_failure.sh';
    fi

deploy:
  github-token: $GITHUB_TOKEN
  provider: pages
  skip-cleanup: true
  local-dir: gh-pages
  keep-history: false
  verbose: true
  on:
    branch: master
    condition: $BUILD_NAME == DOCS && $TRAVIS_EVENT_TYPE != cron
